from ALU import ALU
from nmigen.back.pysim import *
from CONSTS import ALU_FUNCS, DATA_TYPES
from Utils import to_formatted_hex

s: int = 0
f: int = 0
def alu_ut(alu: ALU, func: ALU_FUNCS, op1: str, op2: str, data_type: DATA_TYPES, expected: str):
    global s, f

    yield alu.op1.eq(int(op1, 16))
    yield alu.op2.eq(int(op2, 16))
    yield alu.data_type.eq(data_type)
    yield alu.func.eq(func)

    yield Settle()

    res = to_formatted_hex((yield alu.res))
    
    if res == expected:
        s += 1
    else:
        buf = to_formatted_hex((yield alu.buf))
        print(f'WRONG:\n{op1 = }\n{op2 = }\n{func = }\n{res = }\n{data_type = }\n{expected = }\n{buf = }\n\n')
        f += 1


def alu_test(alu: ALU):
    global s, f

    yield from alu_moreless_test(alu)
    yield from alu_addsub_test(alu)
    yield from alu_equal_test(alu)
    
    print(f'{s = }\n{f = }')


def alu_moreless_test(alu: ALU):
    yield from alu_ut(alu, ALU_FUNCS.MORE,
        '00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00', 
        '00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00',
        DATA_TYPES._32x8b,
        '00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00'
    )

    yield from alu_ut(alu, ALU_FUNCS.MORE,
        '00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_0B_0A_09_08_07_06_05_04_03_02_01_00', 
        '00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_01_01_01_01_01_01_01_01_01_01_01',
        DATA_TYPES._32x8b,
        '00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_01_01_01_01_01_01_01_01_01_01_00_00'
    )

    yield from alu_ut(alu, ALU_FUNCS.MORE,
        '00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_10_00_00_23_23_00_00_01', 
        '00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_23_00_00_23_01_00',
        DATA_TYPES._16x16b,
        '00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_01_00_00_00_01_00_00'
    )

    yield from alu_ut(alu, ALU_FUNCS.MORE,
        '00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_'+'01_00_00_00_'+'00_01_01_01_'+'00_10_00_00_'+'00_01_00_00', 
        '00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_'+'00_01_01_01_'+'01_00_00_00_'+'01_00_00_00_'+'00_00_01_00',
        DATA_TYPES._8x32b,
        '00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_'+'00_00_00_01_'+'00_00_00_00_'+'00_00_00_00_'+'00_00_00_01'
    )

    yield from alu_ut(alu, ALU_FUNCS.MORE,
        '00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_'+'01_00_00_00_00_01_01_01_'+'00_10_00_00_00_01_00_00', 
        '00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_'+'00_01_01_01_01_00_00_00_'+'01_00_00_00_00_00_01_00',
        DATA_TYPES._4x64b,
        '00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_'+'00_00_00_00_00_00_00_01_'+'00_00_00_00_00_00_00_00'
    )

    yield from alu_ut(alu, ALU_FUNCS.LESS,
        '00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00', 
        '00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00',
        DATA_TYPES._32x8b,
        '00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00'
    )

    yield from alu_ut(alu, ALU_FUNCS.LESS,
        '00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_0B_0A_09_08_07_06_05_04_03_02_01_00', 
        '00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_01_01_01_01_01_01_01_01_01_01_01',
        DATA_TYPES._32x8b,
        '00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_01'
    )

    yield from alu_ut(alu, ALU_FUNCS.LESS,
        '00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_10_00_00_23_23_00_00_01', 
        '00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_23_00_00_23_01_00',
        DATA_TYPES._16x16b,
        '00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_01_00_00_00_01'
    )

    yield from alu_ut(alu, ALU_FUNCS.LESS,
        '00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_'+'01_00_00_00_'+'00_01_01_01_'+'00_10_00_00_'+'00_01_00_00', 
        '00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_'+'00_01_01_01_'+'01_00_00_00_'+'01_00_00_00_'+'00_00_01_00',
        DATA_TYPES._8x32b,
        '00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_'+'00_00_00_00_'+'00_00_00_01_'+'00_00_00_01_'+'00_00_00_00'
    )

    yield from alu_ut(alu, ALU_FUNCS.LESS,
        '00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_'+'01_00_00_00_00_01_01_01_'+'00_10_00_00_00_01_00_00', 
        '00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_'+'00_01_01_01_01_00_00_00_'+'01_00_00_00_00_00_01_00',
        DATA_TYPES._4x64b,
        '00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_'+'00_00_00_00_00_00_00_00_'+'00_00_00_00_00_00_00_01'
    )


def alu_equal_test(alu: ALU):
    yield from alu_ut(alu, ALU_FUNCS.EQ,
        '00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00', 
        '00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00',
        DATA_TYPES._32x8b,
        '01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01'
    )

    yield from alu_ut(alu, ALU_FUNCS.EQ,
        '01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01', 
        '01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01',
        DATA_TYPES._32x8b,
        '01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01'
    )

    yield from alu_ut(alu, ALU_FUNCS.EQ,
        '00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_01', 
        '00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_01',
        DATA_TYPES._32x8b,
        '01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01'
    )

    yield from alu_ut(alu, ALU_FUNCS.EQ,
        '00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_01', 
        '00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_02',
        DATA_TYPES._32x8b,
        '01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_00'
    )

    yield from alu_ut(alu, ALU_FUNCS.EQ,
        '00_FF_FF_FF_00_FF_FF_FF_00_FF_FF_FF_00_FF_FF_FF_00_FF_FF_FF_00_FF_FF_FF_00_FF_FF_FF_00_FF_FF_FF', 
        '00_FF_FF_FF_00_FF_FF_FF_00_FF_FF_FF_00_FF_FF_FF_00_FF_FF_FF_00_FF_FF_FF_00_FF_FF_FF_00_FF_FF_FF',
        DATA_TYPES._32x8b,
        '01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01'
    )

    yield from alu_ut(alu, ALU_FUNCS.EQ,
        '00_FF_FF_FF_00_FF_FF_FF_00_FF_FF_FF_00_FF_FF_FF_00_FF_FF_FF_00_FF_FF_FF_00_FF_FF_FF_00_FF_FF_FF', 
        '00_FF_FF_FF_00_FF_FF_FF_00_FF_FF_FF_00_FF_FF_FF_00_FF_FF_FF_00_FF_FF_FF_00_FF_FF_FF_00_FF_FF_FF',
        DATA_TYPES._16x16b,
        '00_01_00_01_00_01_00_01_00_01_00_01_00_01_00_01_00_01_00_01_00_01_00_01_00_01_00_01_00_01_00_01'
    )

    yield from alu_ut(alu, ALU_FUNCS.EQ,
        '00_FF_FF_FF_00_FF_FF_FF_00_FF_FF_FF_00_FF_FF_FF_00_FF_FF_FF_00_FF_FF_FF_00_FF_FF_FF_00_FF_FF_FF', 
        '00_FF_FF_FF_00_FF_FF_FF_00_FF_FF_FF_00_FF_FF_FF_00_FF_FF_FF_00_FF_FF_FF_00_FF_FF_FF_00_FF_FF_FF',
        DATA_TYPES._8x32b,
        '00_00_00_01_00_00_00_01_00_00_00_01_00_00_00_01_00_00_00_01_00_00_00_01_00_00_00_01_00_00_00_01'
    )

    yield from alu_ut(alu, ALU_FUNCS.EQ,
        '00_FF_FF_FF_00_FF_FF_FF_00_FF_FF_FF_00_FF_FF_FF_00_FF_FF_FF_00_FF_FF_FF_00_FF_FF_FF_00_FF_FF_FF', 
        '00_FF_FF_FF_00_FF_FF_FF_00_FF_FF_FF_00_FF_FF_FF_00_FF_FF_FF_00_FF_FF_FF_00_FF_FF_FF_00_FF_FF_FF',
        DATA_TYPES._4x64b,
        '00_00_00_00_00_00_00_01_00_00_00_00_00_00_00_01_00_00_00_00_00_00_00_01_00_00_00_00_00_00_00_01'
    )

    
def alu_addsub_test(alu: ALU):
    yield from alu_ut(alu, ALU_FUNCS.MORE,
        '00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00', 
        '00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00',
        DATA_TYPES._32x8b,
        '00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00'
    )

    yield from alu_ut(alu, ALU_FUNCS.SUB,
        '00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00', 
        '00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00',
        DATA_TYPES._32x8b,
        '00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00'
    )

    yield from alu_ut(alu, ALU_FUNCS.ADD,
        'FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF',
        '1',
        DATA_TYPES._32x8b, 
        'FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_00'
    )

    yield from alu_ut(alu, ALU_FUNCS.ADD,
        'AA_AA_AA_AA_AA_AA_AA_AA_AA_AA_AA_AA_AA_AA_AA_AA_AA_AA_AA_AA_AA_AA_AA_AA_AA_AA_AA_AA_AA_AA_AA_AA',
        '12_12_12_12_12_12_12_12_12_12_12_12_12_12_12_12_12_12_12_12_12_12_12_12_12_12_12_12_12_12_12_12',
        DATA_TYPES._32x8b, 
        'BC_BC_BC_BC_BC_BC_BC_BC_BC_BC_BC_BC_BC_BC_BC_BC_BC_BC_BC_BC_BC_BC_BC_BC_BC_BC_BC_BC_BC_BC_BC_BC'
    )
    yield from alu_ut(alu, ALU_FUNCS.ADD,
        'FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF',
        '01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01',
        DATA_TYPES._32x8b, 
        '00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00'
    )

    yield from alu_ut(alu, ALU_FUNCS.ADD,
        'FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF',
        '00_01_00_01_00_01_00_01_00_01_00_01_00_01_00_01_00_01_00_01_00_01_00_01_00_01_00_01_00_01_00_01',
        DATA_TYPES._16x16b, 
        '00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00'
    )

    yield from alu_ut(alu, ALU_FUNCS.ADD,
        '00_FF_00_FF_00_FF_00_FF_00_FF_00_FF_00_FF_00_FF_00_FF_00_FF_00_FF_00_FF_00_FF_00_FF_00_FF_00_FF',
        '00_01_00_01_00_01_00_01_00_01_00_01_00_01_00_01_00_01_00_01_00_01_00_01_00_01_00_01_00_01_00_01',
        DATA_TYPES._16x16b, 
        '01_00_01_00_01_00_01_00_01_00_01_00_01_00_01_00_01_00_01_00_01_00_01_00_01_00_01_00_01_00_01_00'
    )

    yield from alu_ut(alu, ALU_FUNCS.ADD,
        '00_FF_FF_FF_00_FF_FF_FF_00_FF_FF_FF_00_FF_FF_FF_00_FF_FF_FF_00_FF_FF_FF_00_FF_FF_FF_00_FF_FF_FF',
        '00_00_00_01_00_00_00_01_00_00_00_01_00_00_00_01_00_00_00_01_00_00_00_01_00_00_00_01_00_00_00_01',
        DATA_TYPES._8x32b, 
        '01_00_00_00_01_00_00_00_01_00_00_00_01_00_00_00_01_00_00_00_01_00_00_00_01_00_00_00_01_00_00_00'
    )

    yield from alu_ut(alu, ALU_FUNCS.ADD,
        'FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF',
        '00_00_00_00_00_00_00_01_00_00_00_00_00_00_00_01_00_00_00_00_00_00_00_01_00_00_00_00_00_00_00_01',
        DATA_TYPES._4x64b, 
        '00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00'
    )

    yield from alu_ut(alu, ALU_FUNCS.SUB,
        'FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF',
        'FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF',
        DATA_TYPES._32x8b, 
        '00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00'
    )

    yield from alu_ut(alu, ALU_FUNCS.SUB, 
        'FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF',
        'FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF',
        DATA_TYPES._16x16b, 
        '00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00'
    )

    yield from alu_ut(alu, ALU_FUNCS.SUB,
        'FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF',
        'FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF',
        DATA_TYPES._8x32b, 
        '00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00'
    )

    yield from alu_ut(alu, ALU_FUNCS.SUB,
        'FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF',
        'FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF_FF',
        DATA_TYPES._4x64b, 
        '00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00_00'
    )


def main():
    alu = ALU()

    sim = Simulator(alu)
    with sim.write_vcd(open('out.vcd', 'w')):
        sim.add_clock(1e-6)
        sim.add_sync_process(lambda: (yield from alu_test(alu)))
        sim.run()

if __name__ == '__main__':
    main()
